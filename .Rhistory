quarto render
library(quarto)
install.packages("tidyverse")
install.packages("palmerpenguins")
quartor render
quarto render
install.packages("quarto")
quarto render _quarto.yml
quarto render _quarto.yml
install.packages("quarto")
qwda√º
quarto::quarto_render(_quarto.yml)
quarto render _quarto.yml
quarto render _quarto.yml
quarto::quarto_render(_quarto.yml)
quarto::render("_quarto.yml")
rmarkdown::render
quarto::quarto_render(about.qmd)
quarto::render("index.qmd")
quarto::quarto_render("index.qmd")
remove.packages(quarto)
x<-1 + 1
x
reticulate::repl_python()
reticulate::repl_python()
x=1 + 1
print(x)
x=1 + 1
print(x)
quit
x<-1 + 1
x
if (x > 5) {
print("x is greater than 5")
} else {
print("x is not greater than 5")
}
for (i in 1:5) {
print(i)
}
reticulate::repl_python()
if x > 5:
print("x is greater than 5")
else:
print("x is not greater than 5")
for i in range(1, 6):
print(i)
if x > 5:print("x is greater than 5")
else:
print("x is not greater than 5")
for i in range(1, 6):
print(i)
if x > 5:print("x is greater than 5"),for i in range(1, 6):
print(i)
else:
print("x is not greater than 5")
for i in range(1, 6):
print(i)
if x > 5:print("x is greater than 5"),print("x is greater than 5"
else:
print("x is not greater than 5")
for i in range(1, 6):
print(i)
if x > 5:print("x is greater than 5")
else: print("x is not greater than 5")
for i in range(1, 6):
print(i)
if x > 5:print("x is greater than 5")
else: print("x is not greater than 5")
for i in range(1, 6):print(i)
quit
if (x > 5) {
print("x is greater than 5")
} else {
print("x is not greater than 5"),print("x is not greater than 5")
if (x > 5) {
print("x is greater than 5")
} else {
print("x is not greater than 5") print("x is not greater than 5")
for (i in 1:5) {
print(i)
}
reticulate::repl_python()
for i in range(1, 6):
print(i)
quit
for (i in :5) {
for i in (:5) {
for i in (,5) {
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
first_striker <- strikers[1]
print(first_striker
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
first_striker <- strikers[1]
print(first_striker)
reticulate::repl_python()
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
first_striker = strikers[0]
print(first_striker)
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
first_striker = strikers[0]
print(first_striker)
quit
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
reticulate::repl_python()
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
quit
library(dslabs)
library(dslabs)
install.packages("dslabs")
library(dslabs)
data("na_example")
print(na_example)
print( sum(is.na(na_example)))
na_example_vl <- na_example
na_example_vl[is.na(na_example_vl)] <- 0
na_example_vl
sum(is.na(na_example_vl))
install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA")
print(na_example)
print( sum(is.na(na_example)))
na_example_vl <- na_example
na_example_vl[is.na(na_example_vl)] <- 0
na_example_vl
sum(is.na(na_example_vl))
install.packages("dslabs")
install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA values")
print(na_example)
total_nas_original <- sum(is.na(na_example))
print(paste("Total NAs in the original dataset: ", total_nas_original))
na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0# Replace all NA values in the na_example dataset with 0
print("\nDataset without NAs:")# Show the content of the new dataset without NAs
print(na_example_no_na)
total_nas_new <- sum(is.na(na_example_no_na))
print(paste("Total NAs in the new dataset: ", total_nas_new))# Calculate and print the total number of NAs in the new dataset
install.packages("dslabs")
#install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA values")
print(na_example)
total_nas_original <- sum(is.na(na_example))
print(paste("Total NAs in the original dataset: ", total_nas_original))
na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0# Replace all NA values in the na_example dataset with 0
print("\nDataset without NAs:")# Show the content of the new dataset without NAs
print(na_example_no_na)
total_nas_new <- sum(is.na(na_example_no_na))
print(paste("Total NAs in the new dataset: ", total_nas_new))# Calculate and print the total number of NAs in the new dataset
#install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA values")
print(na_example)
total_nas_original <- sum(is.na(na_example))
print(paste("Total NAs in the original dataset: ", total_nas_original))
na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0# Replace all NA values in the na_example dataset with 0
print("Dataset without NAs:")# Show the content of the new dataset without NAs
print(na_example_no_na)
total_nas_new <- sum(is.na(na_example_no_na))
print(paste("Total NAs in the new dataset: ", total_nas_new))# Calculate and print the total number of NAs in the new dataset
