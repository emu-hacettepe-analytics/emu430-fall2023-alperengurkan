---
title: "Assignment 1"
---

# Assignment 1

```{r}
x<-1 + 1
x
```

```{python}
x=1 + 1
print(x)
```

My first assignment has two parts.

## Section A

## Section B

### 1

In the R language our elements are starting from 1

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")

first_striker <- strikers[1]
print(first_striker)
```

In the Python our first element starting from 0

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
first_striker = strikers[0]
print(first_striker)

```

### 2

In R, the \<- symbol is used for variable assignment.

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
```

In Python, the = symbol is used for variable assignment.

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
```

### 3

In R, the c() function is used to create a vector.

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")

```

In Python, square brackets \[\] are used to create a list.

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]

```

## Section C

```{r}

#install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA values")
print(na_example)


total_nas_original <- sum(is.na(na_example))
print(paste("Total NAs in the original dataset: ", total_nas_original))


na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0# Replace all NA values in the na_example dataset with 0


print("Dataset without NAs:")# Show the content of the new dataset without NAs
print(na_example_no_na)


total_nas_new <- sum(is.na(na_example_no_na))
print(paste("Total NAs in the new dataset: ", total_nas_new))# Calculate and print the total number of NAs in the new dataset




```
