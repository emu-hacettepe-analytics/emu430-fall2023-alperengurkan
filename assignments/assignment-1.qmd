---
title: "Assignment 1"
---

# Assignment 1

```{r}
x<-1 + 1
x
```

```{python}
x=1 + 1
print(x)
```

My first assignment has three parts.

## Section A

### [R Conference,Yes, you can use Python with RStudio Team! Gagandeep Singh & Xu Fei](https://www.rstudio.com/conference/2022/talks/develop-deploy-python-rstudio/)

#### Summary:
   The video aims to exemplify the integration of Python within RStudio for data analysis. The dataset utilized in the demonstration is sourced from a bikeshare application, showcasing information about bike stations and the available bikes at each station. Previous analysis had been conducted using R, but the objective is to extend the capability to predict future bike availability using live data feeds. The video's programmers performed the analysis in a Jupyter Notebook, importing the bike dataset as a dataframe. To facilitate broader application usage, they migrated the model to RStudio Connect, enabling deployment of the Jupyter Notebook and scheduling functionalities. In essence, the video illustrates the seamless utilization of Python tools within the RStudio environment.


## Section B

### 1

In the R language our elements are starting from 1

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")

first_striker <- strikers[1]
print(first_striker)
```

In the Python our first element starting from 0

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
first_striker = strikers[0]
print(first_striker)

```

### 2

In R, the \<- symbol is used for variable assignment.

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")
```

In Python, the = symbol is used for variable assignment.

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]
```

### 3

In R, the c() function is used to create a vector.

```{r}
strikers <- c("Mauro Icardi", "Didier Drogba", "Wesley Sneijder")

```

In Python, square brackets \[\] are used to create a list.

```{python}
strikers = ["Mauro Icardi", "Didier Drogba", "Wesley Sneijder"]

```

## Section C

```{r}

#install.packages("dslabs") # install packages
library(dslabs) # Load the dslabs package
data("na_example") # Load the na_example dataset
print("There is the data set with NA values")
print(na_example)


total_nas_original <- sum(is.na(na_example))
print(paste("Total NAs in the original dataset: ", total_nas_original))


na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0# Replace all NA values in the na_example dataset with 0


print("Dataset without NAs:")# Show the content of the new dataset without NAs
print(na_example_no_na)


total_nas_new <- sum(is.na(na_example_no_na))
print(paste("Total NAs in the new dataset: ", total_nas_new))# Calculate and print the total number of NAs in the new dataset




```
